package mainheroinfo

import (
	"math/rand"
)

func RandomRace() string { // Функция, рандомно вызвращающая расу героя
	races := map[int]string{ // Мапа с расами из Книги Игрока (подрасы выведены как отдельные расы)
		1:  "Холмовой Дварф",
		2:  "Горный Дварф",
		3:  "Крепкий Полурослик",
		4:  "Легконогий Полурослик",
		5:  "Человек",
		6:  "Высший Эльф",
		7:  "Лесной Эльф",
		8:  "Дроу",
		9:  "Лесной Гном",
		10: "Скальный Гном",
		11: "Драконорождённый",
		12: "Полуорк",
		13: "Полуэльф",
		14: "Тифлинг",
	}

	// Генерация случайного числа для вывода расы в соответствии с мапой
	rr := rand.Intn(14) + 1                                        // rr - random race
	total_race := "Поздравляю, авантюрист! Ты теперь " + races[rr] // Сообщение с итоговой расой
	return total_race
}

func RandomClass() string { // Функция, рандомно вызвращающая класс героя
	classes := map[int]string{ // Мапа с классами из Книги Игрока
		1:  "Бард",
		2:  "Варвар",
		3:  "Воин",
		4:  "Волшебник",
		5:  "Друид",
		6:  "Жрец",
		7:  "Колдун",
		8:  "Монах",
		9:  "Паладин",
		10: "Плут",
		11: "Следопыт",
		12: "Чародей",
	}
	// Генерация случайного числа для вывода класса в соответствии с мапой
	rc := rand.Intn(12) + 1                     // rc - random class
	total_class := "Твой класс: " + classes[rc] // Сообщение с итоговым классом
	return total_class
}

func RandomBackground() string { // Функция, рандомно вызвращающая происхождение героя
	backgrounds := map[int]string{ // Мапа с происхождениями из Книги Игрока
		1:  "Артист",
		2:  "Благородный",
		3:  "Бродяга",
		4:  "Моряк",
		5:  "Мудрец",
		6:  "Народный герой",
		7:  "Отшельник",
		8:  "Послушник",
		9:  "Преступник",
		10: "Ремесленник из гильдии",
		11: "Солдат",
		12: "Чужеземец",
		13: "Шарлатан",
	}
	// // Генерация случайного числа для вывода происхождения в соответствии с мапой
	rb := rand.Intn(14) + 1                                        // rb - random backgruond
	total_background := "А по происхождению ты " + backgrounds[rb] // Сообщение с итоговым происхождением
	return total_background
}

func RandomAlignment() string { // Функция, рандомно вызвращающая мировоззрение героя
	alignment := map[int]string{ // Мапа с мировоззрениями из Книги Игрока
		1: "Законопослушный добрый",
		2: "Законопослушный нейтральный",
		3: "Законопослушный злой",
		4: "Хаотичный добрый",
		5: "Хаотичный нейтральный",
		6: "Хаотичный злой",
		7: "Нейтральный добрый",
		8: "Нейтральный",
		9: "Нейтральный хаотичный",
	}
	ra := rand.Intn(14) + 1                                     // ra - random alignment
	total_alignment := "А по происхождению ты " + alignment[ra] // Сообщение с итоговым мировоззрением
	return total_alignment
}

// Логика:
// 1. Заводим мапу
// 2. Генерируем случайное число от 1 до верхнего предела (максимального ключа мапы)
// 3. Выводим значение мапы в соответсвии с рандомным ключом
